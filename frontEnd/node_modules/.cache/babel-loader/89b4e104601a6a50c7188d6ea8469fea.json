{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/JobPractice/Yaniv_Exc/FinalReactProject/frontEnd/myfrontsite/src/Components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateAccount = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const [user, setUser] = useState([]);\n\n  const onSubmit = async function (data) {\n    let users = await axios.get('http://localhost:4000/routingToFront/UsersDB'); // users.data.forEach(x=> console.log(x.userName))\n\n    var userData = users.data.filter(u => u.User == data.user);\n\n    if (userData == \"\") {\n      console.log(\"this user is not exiest\");\n      history.push(\"/noUser\");\n    } else {\n      userData.forEach(x => {\n        if (x.Password == \"\") {\n          let user = {\n            _id: x._id,\n            User: x.User,\n            Password: data.pwd\n          };\n          axios.put('http://localhost:4000/routingToFront/UsersDB/:' + x._id, user).then(resp => console.log(resp.data));\n        } else if (x.Password == data.pwd) {\n          history.push(\"/\");\n        } else {\n          console.log(\"this user is not exiest\");\n          history.push(\"/noUser\");\n        }\n      });\n      console.log(userData.User);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"user\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 64\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pwd\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateAccount, \"p703ODGLDqfi2ns494IUNKx7JjU=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/carmelklein/JobPractice/Yaniv_Exc/FinalReactProject/frontEnd/myfrontsite/src/Components/CreateAccount.js"],"names":["useForm","axios","useState","useHistory","CreateAccount","history","register","handleSubmit","errors","user","setUser","onSubmit","data","users","get","userData","filter","u","User","console","log","push","forEach","x","Password","_id","pwd","put","then","resp"],"mappings":";;;;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,aAAa,GAAI,MACvB;AAAA;;AACI,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCR,OAAO,EAAlD,CAFJ,CAE0D;;AACtD,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,QAAQ,GAAG,gBAAeC,IAAf,EACjB;AACI,QAAIC,KAAK,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8CAAV,CAAlB,CADJ,CAEI;;AACA,QAAIC,QAAQ,GAAGF,KAAK,CAACD,IAAN,CAAWI,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,IAAUN,IAAI,CAACH,IAAtC,CAAf;;AACA,QAAGM,QAAQ,IAAI,EAAf,EACA;AACII,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,SAAb;AACH,KAJD,MAMA;AACIN,MAAAA,QAAQ,CAACO,OAAT,CAAiBC,CAAC,IACd;AACI,YAAGA,CAAC,CAACC,QAAF,IAAc,EAAjB,EACA;AACI,cAAIf,IAAI,GAAG;AAACgB,YAAAA,GAAG,EAAEF,CAAC,CAACE,GAAR;AAAcP,YAAAA,IAAI,EAAGK,CAAC,CAACL,IAAvB;AAA8BM,YAAAA,QAAQ,EAAGZ,IAAI,CAACc;AAA9C,WAAX;AACAzB,UAAAA,KAAK,CAAC0B,GAAN,CAAU,mDAAiDJ,CAAC,CAACE,GAA7D,EAAkEhB,IAAlE,EACKmB,IADL,CACUC,IAAI,IAAIV,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACjB,IAAjB,CADlB;AAGH,SAND,MAOK,IAAGW,CAAC,CAACC,QAAF,IAAcZ,IAAI,CAACc,GAAtB,EACL;AACIrB,UAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACH,SAHI,MAKL;AACIF,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAf,UAAAA,OAAO,CAACgB,IAAR,CAAa,SAAb;AACH;AACJ,OAlBL;AAmBAF,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACH;AACJ,GAjCD;;AAkCA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAIX,YAAY,CAACI,QAAD,CAA9B;AAAA,6CACW;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,GAAG,EAAIL;AAA5B;AAAA;AAAA;AAAA;AAAA,cADX,eACmD;AAAA;AAAA;AAAA;AAAA,cADnD,6BAEU;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,GAAG,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFV,eAE4C;AAAA;AAAA;AAAA;AAAA,cAF5C,eAGA;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,KAAK,EAAG;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHA,eAG0C;AAAA;AAAA;AAAA;AAAA,cAH1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlDD;;GAAMF,a;UAEYD,U,EAC6BH,O;;;KAHzCI,a;AAoDN,eAAeA,aAAf","sourcesContent":["import { useForm } from 'react-hook-form';\nimport axios from 'axios'\nimport {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateAccount  = () =>\n{\n    let history = useHistory();\n    const { register, handleSubmit, errors } = useForm(); // initialize the hook\n    const [user, setUser] = useState([])\n\n    const onSubmit = async function(data)\n    {\n        let users = await axios.get('http://localhost:4000/routingToFront/UsersDB')\n        // users.data.forEach(x=> console.log(x.userName))\n        var userData = users.data.filter(u => u.User == data.user)\n        if(userData == \"\")\n        {\n            console.log(\"this user is not exiest\")\n            history.push(\"/noUser\");\n        }\n        else\n        {\n            userData.forEach(x=>\n                {\n                    if(x.Password == \"\")\n                    {\n                        let user = {_id: x._id , User : x.User , Password : data.pwd}\n                        axios.put('http://localhost:4000/routingToFront/UsersDB/:'+x._id, user)\n                            .then(resp => console.log(resp.data))\n\n                    }\n                    else if(x.Password == data.pwd)\n                    {\n                        history.push(\"/\");\n                    }\n                    else\n                    {\n                        console.log(\"this user is not exiest\")\n                        history.push(\"/noUser\");\n                    }\n                })\n            console.log(userData.User)\n        }\n    }\n    return(\n        <div>\n            <h3> Create an Account</h3>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n            User Name: <input name = \"user\" ref = {register} /><br/>\n            Password: <input name=\"pwd\" ref={register}/><br/>\n            <input type = \"submit\" value = \"Create\" /><br/>\n            </form>\n        </div>\n    ) \n}\n\nexport default CreateAccount\n"]},"metadata":{},"sourceType":"module"}