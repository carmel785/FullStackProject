{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/JobPractice/Yaniv_Exc/FinalReactProject/frontEnd/myfrontsite/src/Pages/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Switch, Route } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst CreateAccount = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const [user, setUser] = useState([]);\n\n  const onSubmit = async function (data) {\n    console.log(data);\n    let users = await axios.get('http://localhost:4000/routingToFront/UsersDB'); // console.log(data.user)\n\n    var userData = users.data.filter(u => u == \"asdasdas\");\n\n    if (userData == \"\") {\n      console.log(\"found it\");\n    } else {\n      console.log(\"user data is empty\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"user\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 64\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pwd\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateAccount, \"bl4FUudU0T/QNantpiGM3SV9Sns=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/carmelklein/JobPractice/Yaniv_Exc/FinalReactProject/frontEnd/myfrontsite/src/Pages/CreateAccount.js"],"names":["Link","Switch","Route","useForm","axios","useState","CreateAccount","register","handleSubmit","errors","user","setUser","onSubmit","data","console","log","users","get","userData","filter","u"],"mappings":";;;;;AAAA,SAAQA,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAkC,kBAAlC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,MAAMC,aAAa,GAAI,MACvB;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD,CADJ,CAC0D;;AACtD,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,QAAQ,GAAG,gBAAeC,IAAf,EACjB;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,KAAK,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8CAAV,CAAlB,CAFJ,CAGI;;AACA,QAAIC,QAAQ,GAAGF,KAAK,CAACH,IAAN,CAAWM,MAAX,CAAkBC,CAAC,IAAIA,CAAC,IAAI,UAA5B,CAAf;;AACA,QAAGF,QAAQ,IAAI,EAAf,EACA;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAHD,MAKA;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,GAdD;;AAeA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAIP,YAAY,CAACI,QAAD,CAA9B;AAAA,6CACW;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,GAAG,EAAIL;AAA5B;AAAA;AAAA;AAAA;AAAA,cADX,eACmD;AAAA;AAAA;AAAA;AAAA,cADnD,6BAEU;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,GAAG,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFV,eAE4C;AAAA;AAAA;AAAA;AAAA,cAF5C,eAGA;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,KAAK,EAAG;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHA,eAG0C;AAAA;AAAA;AAAA;AAAA,cAH1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA9BD;;GAAMD,a;UAEyCH,O;;;KAFzCG,a;AAgCN,eAAeA,aAAf","sourcesContent":["import {Link, Switch, Route} from 'react-router-dom'\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios'\nimport {useState} from 'react'\n\n\nconst CreateAccount  = () =>\n{\n    const { register, handleSubmit, errors } = useForm(); // initialize the hook\n    const [user, setUser] = useState([])\n\n    const onSubmit = async function(data)\n    {\n        console.log(data)\n        let users = await axios.get('http://localhost:4000/routingToFront/UsersDB')\n        // console.log(data.user)\n        var userData = users.data.filter(u => u == \"asdasdas\")\n        if(userData == \"\")\n        {\n            console.log(\"found it\")\n        }\n        else\n        {\n            console.log(\"user data is empty\")\n        }\n    }\n    return(\n        <div>\n            <h3> Create an Account</h3>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n            User Name: <input name = \"user\" ref = {register} /><br/>\n            Password: <input name=\"pwd\" ref={register}/><br/>\n            <input type = \"submit\" value = \"Create\" /><br/>\n            </form>\n        </div>\n    ) \n}\n\nexport default CreateAccount\n"]},"metadata":{},"sourceType":"module"}