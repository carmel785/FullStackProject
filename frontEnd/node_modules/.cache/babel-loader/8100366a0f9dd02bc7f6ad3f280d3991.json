{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/Users.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from './Contexts';\n\nfunction Users() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  let history = useHistory();\n  const context = useContext(UserContext);\n  let location = useLocation(); // avoiding infinite loop\n\n  useEffect(() => {\n    // console.log(\"User: \"+context)\n    // if(location.state !== undefined) // if the the EditUser componnent change the user values so change the users array state.\n    // {\n    //     axios.get('http://localhost:4000/routingToFront/UsersDB')\n    //     .then(allUsers => \n    //     {\n    //         // allUsers.data.forEach(x=> console.log(x))\n    //         console.log()\n    //         var userData = allUsers.data.filter(u => u.User === location.state.prevUser)\n    //         userData.forEach(x=>\n    //             {\n    //                 // let user = {_id: x._id , User : x.User , Password : data.pwd}\n    //                 let newArr = {\n    //                     _id: x._id,\n    //                     Password: x.Password,\n    //                     prevUser: location.state.prevUser,\n    //                     fname: location.state.fname,\n    //                     lname: location.state.lname,\n    //                     User: location.state.user,\n    //                     sessionTimeOut: location.state.sessionTimeOut,\n    //                     createM: location.state.createM,\n    //                     createS: location.state.createS,\n    //                     deleteM: location.state.deleteM,\n    //                     deleteS: location.state.deleteS,\n    //                     updateM: location.state.updateM,\n    //                     updateS: location.state.updateS,\n    //                     // created_date: location.state.created_date\n    //                 }\n    //                 axios.put('http://localhost:4000/routingToFront/UsersDB/:'+x._id, newArr)\n    //                     .then(resp => console.log(resp.data))\n    //             })\n    //     })\n    // }\n    // else\n    {\n      //get Rest api request - getting all users data from the WS\n      axios.get('http://localhost:4000/routingToFront/UsersDBFullData').then(x => {\n        setUsers(x.data);\n      });\n    }\n  }, []); // i need to get data out of the useEffect cause for the data to show its need another refresh page.\n\n  axios.get('http://localhost:4000/routingToFront/UsersDBFullData').then(x => {\n    setUsers(x.data);\n  });\n\n  const editClick = (name, userName) => {\n    //update user\n    console.log(name);\n    history.push(\"/main/manageUsers/EditUser/\" + name + \"/\" + userName);\n  };\n\n  const deleteClick = userName => {\n    //delete user\n    axios.get('http://localhost:4000/routingToFront/deleteUser/' + userName).then(x => console.log(x));\n    axios.get('http://localhost:4000/routingToFront/UsersDBFullData').then(x => {\n      setUsers(x.data);\n    });\n  };\n\n  let items = users.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n      children: [\"Name: \", item.fullName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this), \"User Name: \", item.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 39\n      }, this), \"Session Time Out: \", item.sessionTimeOut, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 52\n      }, this), \"Created Date: \", item.created_date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 46\n      }, this), \"Permissions: \", item.permissions.join(\",\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-sans-serif\",\n        type: \"button\",\n        value: \"Edit\",\n        onClick: () => editClick(item.fullName, item.userName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-sans-serif\",\n        type: \"button\",\n        value: \"Delete\",\n        onClick: () => deleteClick(item.userName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"w3-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Users, \"ovaPFKXDsYh78BkNKIhMlsfaeWg=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/Users.js"],"names":["axios","useState","useContext","useEffect","useHistory","useLocation","UserContext","Users","users","setUsers","history","context","location","get","then","x","data","editClick","name","userName","console","log","push","deleteClick","items","map","item","index","fullName","sessionTimeOut","created_date","permissions","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,SAASC,KAAT,GACA;AAAA;;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIS,OAAO,GAAGN,UAAU,EAAxB;AACA,QAAMO,OAAO,GAAGT,UAAU,CAACI,WAAD,CAA1B;AACA,MAAIM,QAAQ,GAAGP,WAAW,EAA1B,CAJJ,CAUI;;AACAF,EAAAA,SAAS,CAAC,MAAK;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAC;AACGH,MAAAA,KAAK,CAACa,GAAN,CAAU,sDAAV,EACCC,IADD,CACMC,CAAC,IAAE;AAACN,QAAAA,QAAQ,CAACM,CAAC,CAACC,IAAH,CAAR;AAAiB,OAD3B;AAEH;AACJ,GAxCQ,EAwCP,EAxCO,CAAT,CAXJ,CAqDI;;AACAhB,EAAAA,KAAK,CAACa,GAAN,CAAU,sDAAV,EACCC,IADD,CACMC,CAAC,IAAE;AAACN,IAAAA,QAAQ,CAACM,CAAC,CAACC,IAAH,CAAR;AAAiB,GAD3B;;AAGA,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAMC,QAAN,KAClB;AAAC;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAR,IAAAA,OAAO,CAACY,IAAR,CAAa,gCAA8BJ,IAA9B,GAAmC,GAAnC,GAAuCC,QAApD;AACH,GAJD;;AAOA,QAAMI,WAAW,GAAIJ,QAAD,IACpB;AAAC;AACGnB,IAAAA,KAAK,CAACa,GAAN,CAAU,qDAAmDM,QAA7D,EACCL,IADD,CACMC,CAAC,IAAGK,OAAO,CAACC,GAAR,CAAYN,CAAZ,CADV;AAGAf,IAAAA,KAAK,CAACa,GAAN,CAAU,sDAAV,EACCC,IADD,CACMC,CAAC,IAAE;AAACN,MAAAA,QAAQ,CAACM,CAAC,CAACC,IAAH,CAAR;AAAiB,KAD3B;AAEH,GAPD;;AASA,MAAIQ,KAAK,GAAGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAClC,wBAAO;AAAmB,MAAA,SAAS,EAAC,2DAA7B;AAAA,2BACID,IAAI,CAACE,QADT,eACkB;AAAA;AAAA;AAAA;AAAA,cADlB,iBAESF,IAAI,CAACP,QAFd,eAEuB;AAAA;AAAA;AAAA;AAAA,cAFvB,wBAGgBO,IAAI,CAACG,cAHrB,eAGoC;AAAA;AAAA;AAAA;AAAA,cAHpC,oBAIYH,IAAI,CAACI,YAJjB,eAI8B;AAAA;AAAA;AAAA;AAAA,cAJ9B,mBAKWJ,IAAI,CAACK,WAAL,CAAiBC,IAAjB,CAAsB,GAAtB,CALX,eAKsC;AAAA;AAAA;AAAA;AAAA,cALtC,eAK2C;AAAA;AAAA;AAAA;AAAA,cAL3C,eAMH;AAAO,QAAA,SAAS,EAAG,eAAnB;AAAmC,QAAA,IAAI,EAAG,QAA1C;AAAmD,QAAA,KAAK,EAAG,MAA3D;AAAkE,QAAA,OAAO,EAAI,MAAKf,SAAS,CAACS,IAAI,CAACE,QAAN,EAAeF,IAAI,CAACP,QAApB;AAA3F;AAAA;AAAA;AAAA;AAAA,cANG,eAOH;AAAO,QAAA,SAAS,EAAG,eAAnB;AAAmC,QAAA,IAAI,EAAG,QAA1C;AAAmD,QAAA,KAAK,EAAG,QAA3D;AAAoE,QAAA,OAAO,EAAI,MAAII,WAAW,CAACG,IAAI,CAACP,QAAN;AAA9F;AAAA;AAAA;AAAA;AAAA,cAPG;AAAA,OAAYQ,KAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH,GAXW,CAAZ;AAYA,sBACG;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMH;;GA5FQjB,K;UAGSH,U,EAECC,W;;;KALVE,K;AA8FT,eAAeA,KAAf","sourcesContent":["import axios from 'axios'\nimport { useState, useContext, useEffect} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {UserContext} from './Contexts'\n\nfunction Users()\n{\n    const [users, setUsers] = useState([])\n    let history = useHistory();\n    const context = useContext(UserContext)\n    let location = useLocation()\n    \n\n    \n\n\n    // avoiding infinite loop\n    useEffect(()=> {\n        // console.log(\"User: \"+context)\n        // if(location.state !== undefined) // if the the EditUser componnent change the user values so change the users array state.\n        // {\n        //     axios.get('http://localhost:4000/routingToFront/UsersDB')\n        //     .then(allUsers => \n        //     {\n        //         // allUsers.data.forEach(x=> console.log(x))\n        //         console.log()\n        //         var userData = allUsers.data.filter(u => u.User === location.state.prevUser)\n        //         userData.forEach(x=>\n        //             {\n\n        //                 // let user = {_id: x._id , User : x.User , Password : data.pwd}\n        //                 let newArr = {\n        //                     _id: x._id,\n        //                     Password: x.Password,\n        //                     prevUser: location.state.prevUser,\n        //                     fname: location.state.fname,\n        //                     lname: location.state.lname,\n        //                     User: location.state.user,\n        //                     sessionTimeOut: location.state.sessionTimeOut,\n        //                     createM: location.state.createM,\n        //                     createS: location.state.createS,\n        //                     deleteM: location.state.deleteM,\n        //                     deleteS: location.state.deleteS,\n        //                     updateM: location.state.updateM,\n        //                     updateS: location.state.updateS,\n        //                     // created_date: location.state.created_date\n        //                 }\n        //                 axios.put('http://localhost:4000/routingToFront/UsersDB/:'+x._id, newArr)\n        //                     .then(resp => console.log(resp.data))\n        //             })\n        //     })\n        // }\n        // else\n        {//get Rest api request - getting all users data from the WS\n            axios.get('http://localhost:4000/routingToFront/UsersDBFullData')\n            .then(x=>{setUsers(x.data)})\n        }\n    },[])\n\n    // i need to get data out of the useEffect cause for the data to show its need another refresh page.\n    axios.get('http://localhost:4000/routingToFront/UsersDBFullData')\n    .then(x=>{setUsers(x.data)})\n\n    const editClick = (name,userName) =>\n    {//update user\n        console.log(name)\n        history.push(\"/main/manageUsers/EditUser/\"+name+\"/\"+userName);\n    }\n\n    \n    const deleteClick = (userName) =>\n    {//delete user\n        axios.get('http://localhost:4000/routingToFront/deleteUser/'+userName)\n        .then(x=> console.log(x))\n\n        axios.get('http://localhost:4000/routingToFront/UsersDBFullData')\n        .then(x=>{setUsers(x.data)})\n    }\n\n    let items = users.map((item,index) => {\n        return <div key = {index} className=\"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n            Name: {item.fullName}<br/>\n            User Name: {item.userName}<br/>\n            Session Time Out: {item.sessionTimeOut}<br/>\n            Created Date: {item.created_date}<br/>\n            Permissions: {item.permissions.join(\",\")}<br/><br/>\n            <input className = \"w3-sans-serif\" type = \"button\" value = \"Edit\" onClick = {()=> editClick(item.fullName,item.userName)} />\n            <input className = \"w3-sans-serif\" type = \"button\" value = \"Delete\" onClick = {()=>deleteClick(item.userName) }/>\n\n        </div>\n    })    \n    return(\n       <div class=\"w3-container\">\n       <h1>Users</h1>\n       {items}\n       </div>\n    ) \n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}