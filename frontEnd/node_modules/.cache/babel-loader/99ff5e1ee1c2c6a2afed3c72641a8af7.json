{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMembers.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport SubscribeMovie from \"./SubscribeMovie\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AllMembers = () => {\n  _s();\n\n  const history = useHistory();\n  const [members, setMembers] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subClicked, setSubClicked] = useState([]);\n  const [watchedMovies, setWatchedMovies] = useState([]);\n  const [updateAxios, setUpdateAxios] = useState(false);\n  useEffect(() => {\n    //getting the members from the Web Service\n    axios.get('http://localhost:4000/routingToFront/membersToClient').then(x => {\n      setMembers(x.data);\n    }); //getting the subscriptions from the Web Service(DB)\n\n    axios.get('http://localhost:4000/routingToFront/subscriptionToClient').then(x => {\n      setSubscriptions(x.data);\n    });\n  }, []);\n  useEffect(() => {\n    //create array of falses the represent the members who clicked on Subscribe for new movie\n    let falseArr = [];\n    members.map(x => {\n      falseArr.push(false);\n    });\n    setSubClicked(falseArr);\n  }, [members]); //hook that affected by other hook need to put his get function inside the useeffect []\n  // create the watchedMovies array\n\n  useEffect(() => {\n    let movArr = [];\n    subscriptions.forEach(x => {\n      {\n        x.Movies.forEach(y => {\n          movArr.push({\n            movie: y.movieName,\n            id: x.MemberId\n          });\n        });\n      }\n    });\n    setWatchedMovies(movArr);\n  }, [subscriptions]);\n\n  function splitMoviesToMembers(memberId) {\n    let mWatched = [];\n    watchedMovies.forEach(movie => {\n      if (movie.id == memberId) {\n        mWatched.push(movie.movie);\n      }\n    });\n    return mWatched;\n  }\n\n  const openSubscribe = index => {\n    const updateArray = [...subClicked];\n\n    if (updateArray[index] == false) {\n      updateArray[index] = true;\n      setSubClicked(updateArray);\n    } else {\n      updateArray[index] = false;\n      setSubClicked(updateArray);\n    }\n  };\n\n  const subscriptionItems = (index, item) => {\n    return subscriptions.map((item2, index2) => {\n      if (item._id === item2.MemberId) {\n        return item2.Movies.map((item3, index3) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item3.movieName, \", \", item3.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, index3, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 22\n          }, this);\n        });\n      }\n    });\n  }; //this function I didnt use connector Server \n\n\n  function handleDelete(id) {\n    //delete the member\n    axios.delete(\"http://localhost:8000/routingToCinemaWS/deleteMember/\" + id).then(resp => console.log(resp)); //delete the member's subscriptions\n\n    axios.delete('http://localhost:8000/routingToCinemaWS/deleteSubscriptions/' + id).then(resp => console.log(resp)); //reload the page because of the changes\n\n    window.location.reload(false);\n  }\n\n  function handleUpdate(id, name) {\n    history.push(\"/main/Subscriptions/EditMember/\" + id + \"/\" + name);\n  }\n\n  let items = members.map((item, index) => {\n    let mWatched = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 10\n      }, this), \"Email: \", item.Email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }, this), \"City: \", item.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Edit\",\n        onClick: () => handleUpdate(item._id, item.Name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\",\n        onClick: () => handleDelete(item._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-green w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n        style: {\n          border: \"3px solid\"\n        },\n        children: [\"Movies watched \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Subscribe to new movie\",\n          onClick: () => openSubscribe(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 10\n        }, this), subClicked[index] ? /*#__PURE__*/_jsxDEV(SubscribeMovie, {\n          index: index,\n          item: item,\n          movies: splitMoviesToMembers(item._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 32\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: subscriptionItems(index, item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 8\n  }, this);\n};\n\n_s(AllMembers, \"y4OMHXXEfpECWb7YIDDERsoJk00=\", false, function () {\n  return [useHistory];\n});\n\n_c = AllMembers;\nexport default AllMembers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMembers\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMembers.js"],"names":["axios","useEffect","useState","SubscribeMovie","useHistory","AllMembers","history","members","setMembers","subscriptions","setSubscriptions","subClicked","setSubClicked","watchedMovies","setWatchedMovies","updateAxios","setUpdateAxios","get","then","x","data","falseArr","map","push","movArr","forEach","Movies","y","movie","movieName","id","MemberId","splitMoviesToMembers","memberId","mWatched","openSubscribe","index","updateArray","subscriptionItems","item","item2","index2","_id","item3","index3","date","handleDelete","delete","resp","console","log","window","location","reload","handleUpdate","name","items","Name","Email","City","border"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport SubscribeMovie from \"./SubscribeMovie\"\nimport { useHistory } from \"react-router-dom\";\n\nconst AllMembers  = () =>\n{\n    const history = useHistory();\n    const [members,setMembers] = useState([])\n    const [subscriptions,setSubscriptions] = useState([])\n    const [subClicked, setSubClicked] = useState([])\n    const [watchedMovies, setWatchedMovies] = useState([])\n    const [updateAxios,setUpdateAxios] = useState(false)\n\n   \n    useEffect(() => {\n        //getting the members from the Web Service\n        axios.get('http://localhost:4000/routingToFront/membersToClient')\n          .then(x=>{setMembers(x.data)})\n        \n        \n        //getting the subscriptions from the Web Service(DB)\n        axios.get('http://localhost:4000/routingToFront/subscriptionToClient')\n          .then(x=>{setSubscriptions(x.data)})\n\n      },[]);\n\n\n      useEffect(()=>\n      {\n        //create array of falses the represent the members who clicked on Subscribe for new movie\n        let falseArr = []\n        members.map(x=> {\n          falseArr.push(false)\n        })\n        setSubClicked(falseArr)\n      },[members]) //hook that affected by other hook need to put his get function inside the useeffect []\n\n        // create the watchedMovies array\n        useEffect(()=>\n        {\n          let movArr = []\n          subscriptions.forEach((x)=>{\n            {\n              x.Movies.forEach((y)=>\n              {\n                movArr.push({movie: y.movieName, id: x.MemberId})\n              })\n            }\n           })\n           setWatchedMovies(movArr)\n        },[subscriptions])\n\n\n      function splitMoviesToMembers(memberId)\n      {\n        let mWatched = []\n         watchedMovies.forEach(movie =>\n          {\n            if(movie.id == memberId)\n            {\n              mWatched.push(movie.movie)\n            }\n          })\n          return mWatched\n      }\n       const openSubscribe = (index) =>\n       {\n        const updateArray = [...subClicked];\n        if(updateArray[index] == false)\n         {\n          updateArray[index] = true\n           setSubClicked(updateArray)\n         }\n         else\n         {\n          updateArray[index] = false\n          setSubClicked(updateArray)\n         }\n       }\n\n       const subscriptionItems = (index,item) =>\n       {\n         return subscriptions.map((item2,index2)=>{\n          if(item._id === item2.MemberId)\n          {\n            return item2.Movies.map((item3,index3)=>\n            {\n              return <div key = {index3}>\n              <li>{item3.movieName}, {item3.date}</li>\n              </div>\n            })    \n          }\n         })\n       }\n      \n       //this function I didnt use connector Server \n       function handleDelete(id)\n       {\n         //delete the member\n          axios.delete(\"http://localhost:8000/routingToCinemaWS/deleteMember/\"+id)\n            .then(resp=> console.log(resp))\n\n        //delete the member's subscriptions\n          axios.delete('http://localhost:8000/routingToCinemaWS/deleteSubscriptions/'+id)\n          .then(resp=> console.log(resp))\n\n        //reload the page because of the changes\n          window.location.reload(false);\n       }\n       \n\n       function handleUpdate(id,name)\n       {\n\n        history.push(\"/main/Subscriptions/EditMember/\"+id+\"/\"+name)\n       }\n\n\n      let items = members.map((item,index)=>\n      {\n        let mWatched = []\n        return <div key = {index} className=\"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n         <h4>{item.Name}</h4>\n         Email: {item.Email}<br/>\n         City: {item.City} <br/>\n       \n         <input type =\"button\" value = \"Edit\" onClick = {() => handleUpdate(item._id,item.Name)}/>\n         <input type =\"button\" value = \"Delete\" onClick ={() => handleDelete(item._id)}/>\n         <div className=\"w3-green w3-hover-shadow w3-padding-32 w3-bordered w3-code\" style= {{border: \"3px solid\"}}>\n         Movies watched <br/>\n         <input type =\"button\" value = \"Subscribe to new movie\" onClick = {() => openSubscribe(index)} />\n\n         {(subClicked[index] ? <SubscribeMovie index = {index} item = {item} movies = {splitMoviesToMembers(item._id)}/> : \"\")}\n\n         <ul>\n        {subscriptionItems(index,item)}\n        </ul>\n         </div>\n        </div>\n      })\n\n    return(\n       <div>\n       {items}\n       </div>\n    ) \n}\n\nexport default AllMembers\n"]},"metadata":{},"sourceType":"module"}