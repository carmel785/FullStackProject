{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/SubscribeMovie.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport dal from './Dal';\n\nconst SubscribeMovie = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n  // const [subClicked, setSubClicked] = useState([])\n\n  const [movies, setMovies] = useState([]);\n  const [subMovies, setSubMovies] = useState([]);\n  useEffect(() => {\n    // get all movies\n    axios.get('http://localhost:4000/routingToFront/moviesToClient').then(x => {\n      setMovies(x.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    setSubMovies(props.movies); // console.log(subMovies)\n  }, []); // let x = [1,2,3,4,5]\n  // x.splice(3,1)\n  // console.log(x)\n\n  let items = movies.map((item, index) => {\n    let arrNoSubMovies = movies;\n    movies.forEach((item, index) => {\n      subMovies.forEach(sMovie => {\n        if (sMovie === item.Name) {\n          console.log(sMovie);\n          arrNoSubMovies.splice(index, 1);\n        }\n      });\n    }); // setMovies(arrNoSubMovies)\n\n    console.log(arrNoSubMovies);\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: arrNoSubMovies.Name,\n      children: arrNoSubMovies.Name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }); // let moviesShow = arrNoSubMovies.map((item,index)=>\n  // {\n  //     return <option value = {item.Name} key= {index} >{item.Name}</option>\n  // })\n\n  const onSubmit = async (data) => {\n    //movieName,date,memberId\n    const newSub = {\n      movieName: data.movies,\n      date: data.date,\n      memberId: props.item._id\n    };\n    console.log(newSub);\n    axios.post('http://localhost:4000/routingToFront/addSubscription', newSub).then(resp => console.log(resp)).catch(error => {\n      console.log(\"problem is in subscribeMovie page\");\n    });\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w3-red w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n    children: [\"Add new Movie \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"movies\",\n        id: \"movies\",\n        ref: register,\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 63\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 8\n  }, this);\n};\n\n_s(SubscribeMovie, \"luQRN/MdCfZR3GEUWBtBXrwJ1AE=\", false, function () {\n  return [useForm];\n});\n\n_c = SubscribeMovie;\nexport default SubscribeMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribeMovie\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/SubscribeMovie.js"],"names":["axios","useEffect","useState","useForm","dal","SubscribeMovie","props","register","handleSubmit","errors","movies","setMovies","subMovies","setSubMovies","get","then","x","data","catch","error","console","log","items","map","item","index","arrNoSubMovies","forEach","sMovie","Name","splice","onSubmit","newSub","movieName","date","memberId","_id","post","resp","window","location","reload"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport { useForm } from 'react-hook-form';\nimport dal from './Dal'\n\nconst SubscribeMovie  = (props) =>\n{\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n\n  // const [subClicked, setSubClicked] = useState([])\n  const [movies,setMovies] = useState([])\n  const [subMovies,setSubMovies] = useState([])\n\n  useEffect(() => {\n    // get all movies\n    axios.get('http://localhost:4000/routingToFront/moviesToClient')\n    .then(x=>{(setMovies(x.data))}).catch(error => {console.log(error)}) \n\n    setSubMovies(props.movies)\n  // console.log(subMovies)\n\n  },[]);\n\n  // let x = [1,2,3,4,5]\n  // x.splice(3,1)\n  // console.log(x)\n\n  \n  let items = movies.map((item,index)=>\n  {\n    let arrNoSubMovies = movies\n    movies.forEach((item,index) =>\n    {\n      subMovies.forEach(sMovie =>{\n        if(sMovie === item.Name)\n          {\n            console.log(sMovie)\n            arrNoSubMovies.splice(index,1)\n          }\n        })\n    })\n    // setMovies(arrNoSubMovies)\n    console.log(arrNoSubMovies)\n    return <option value = {arrNoSubMovies.Name} key= {index} >{arrNoSubMovies.Name}</option>\n      \n  })\n  // let moviesShow = arrNoSubMovies.map((item,index)=>\n  // {\n  //     return <option value = {item.Name} key= {index} >{item.Name}</option>\n  // })\n\n  const onSubmit = async (data) =>\n  {\n    //movieName,date,memberId\n    const newSub = {\n      movieName: data.movies,\n      date: data.date,\n      memberId: props.item._id\n    }\n    console.log(newSub)\n    axios.post('http://localhost:4000/routingToFront/addSubscription',newSub)\n    .then(resp => console.log(resp)).catch((error) =>\n    {\n        console.log(\"problem is in subscribeMovie page\")\n    })\n    window.location.reload(false);\n\n  }\n \n    return(\n       <div className=\"w3-red w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n          Add new Movie <br/>\n          <form onSubmit = {handleSubmit(onSubmit)}>\n            <select name=\"movies\" id=\"movies\" ref={register}>\n              {items}\n            </select>\n            <input type = \"date\" name= \"date\" ref={register}/><br/>\n            <input type = \"submit\" value = \"Subscribe\" /><br/>\n          </form>\n        </div>\n    ) \n}\n\n\nexport default SubscribeMovie\n"]},"metadata":{},"sourceType":"module"}