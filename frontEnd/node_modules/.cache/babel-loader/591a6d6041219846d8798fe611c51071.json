{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/Users.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from './UserContext';\n\nfunction Users() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  let history = useHistory();\n  const context = useContext(UserContext);\n  let location = useLocation(); // avoiding infinite loop\n\n  useEffect(() => {\n    console.log(\"User: \" + context);\n\n    if (location.state != undefined) // if the the EditUser componnent change the user values so change the users array state.\n      {\n        laxios.get('http://localhost:4000/routingToFront/UsersDB').then(users => {\n          console.log(users);\n        });\n        var userData = users.data.filter(u => u.User == location.state.prevUser);\n        userData.forEach(x => {\n          let user = {\n            _id: x._id,\n            User: x.User,\n            Password: data.pwd\n          };\n          let newArr = {\n            _id: x._id,\n            Password: x.Password,\n            // prevUser: location.state.prevUser,\n            fname: location.state.fname,\n            lname: location.state.lname,\n            User: location.state.user,\n            sessionTimeOut: location.state.sessionTimeOut,\n            createM: location.state.createM,\n            createS: location.state.createS,\n            deleteM: location.state.deleteM,\n            deleteS: location.state.deleteS,\n            updateM: location.state.updateM,\n            updateS: location.state.updateS // created_date: location.state.created_date\n\n          };\n          axios.put('http://localhost:4000/routingToFront/UsersDB/:' + x._id, newArr).then(resp => console.log(resp.data));\n        }); // axios.put('http://localhost:4000/routingToFront/updateUserAllData', newArr)\n        // .then(resp => console.log(resp.data))\n        // var permissionsArr = makePremissionsText(location.state)\n        // let arr = {\n        //     fullName : location.state.fname + \" \"+ location.state.lname,\n        //     userName : location.state.user,\n        //     sessionTimeOut : location.state.sessionTimeOut,\n        //     created_date : location.state.createdDate,\n        //     permissions : permissionsArr\n        // }\n        // setUsers(arr)\n\n        axios.get('http://localhost:4000/routingToFront/UsersDBFullData').then(x => {\n          setUsers(x.data);\n        });\n      } else {\n      //get Rest api request - getting all users data from the WS\n      axios.get('http://localhost:4000/routingToFront/UsersDBFullData').then(x => {\n        setUsers(x.data);\n      });\n    }\n  }, []);\n\n  const editClick = name => {\n    console.log(name);\n    history.push(\"/main/manageUsers/EditUser/\" + name);\n  };\n\n  let items = users.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n      children: [\"Name: \", item.fullName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }, this), \"User Name: \", item.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this), \"Session Time Out: \", item.sessionTimeOut, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 52\n      }, this), \"Created Date: \", item.created_date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, this), \"Permissions: \", item.permissions.join(\",\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"w3-sans-serif\",\n        type: \"button\",\n        value: \"Edit\",\n        onClick: () => editClick(item.fullName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"w3-sans-serif\",\n        type: \"button\",\n        value: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"w3-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Users, \"ovaPFKXDsYh78BkNKIhMlsfaeWg=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/Users.js"],"names":["axios","useState","useContext","useEffect","useHistory","useLocation","UserContext","Users","users","setUsers","history","context","location","console","log","state","undefined","laxios","get","then","userData","data","filter","u","User","prevUser","forEach","x","user","_id","Password","pwd","newArr","fname","lname","sessionTimeOut","createM","createS","deleteM","deleteS","updateM","updateS","put","resp","editClick","name","push","items","map","item","index","fullName","userName","created_date","permissions","join"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useContext, useEffect} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {UserContext} from './UserContext'\n\nfunction Users()\n{\n    const [users, setUsers] = useState([])\n    let history = useHistory();\n    const context = useContext(UserContext)\n    let location = useLocation()\n    // avoiding infinite loop\n    useEffect(()=> {\n        console.log(\"User: \"+context)\n        if(location.state != undefined) // if the the EditUser componnent change the user values so change the users array state.\n        {\n            laxios.get('http://localhost:4000/routingToFront/UsersDB')\n            .then(users => {\n                console.log(users)\n            })\n            var userData = users.data.filter(u => u.User == location.state.prevUser)\n                userData.forEach(x=>\n                    {\n                        let user = {_id: x._id , User : x.User , Password : data.pwd}\n\n                        let newArr = {\n                            _id: x._id,\n                            Password: x.Password,\n                            // prevUser: location.state.prevUser,\n                            fname: location.state.fname,\n                            lname: location.state.lname,\n                            User: location.state.user,\n                            sessionTimeOut: location.state.sessionTimeOut,\n                            createM: location.state.createM,\n                            createS: location.state.createS,\n                            deleteM: location.state.deleteM,\n                            deleteS: location.state.deleteS,\n                            updateM: location.state.updateM,\n                            updateS: location.state.updateS,\n                            // created_date: location.state.created_date\n                        }\n                        axios.put('http://localhost:4000/routingToFront/UsersDB/:'+x._id, newArr)\n                            .then(resp => console.log(resp.data))\n                    })\n        \n            // axios.put('http://localhost:4000/routingToFront/updateUserAllData', newArr)\n            // .then(resp => console.log(resp.data))\n\n            // var permissionsArr = makePremissionsText(location.state)\n            // let arr = {\n            //     fullName : location.state.fname + \" \"+ location.state.lname,\n            //     userName : location.state.user,\n            //     sessionTimeOut : location.state.sessionTimeOut,\n            //     created_date : location.state.createdDate,\n            //     permissions : permissionsArr\n            // }\n            // setUsers(arr)\n            axios.get('http://localhost:4000/routingToFront/UsersDBFullData')\n            .then(x=>{setUsers(x.data)})\n        }\n        else\n        {//get Rest api request - getting all users data from the WS\n            axios.get('http://localhost:4000/routingToFront/UsersDBFullData')\n            .then(x=>{setUsers(x.data)})\n        }\n    },[])\n\n    const editClick = (name) =>\n    {\n        console.log(name)\n        history.push(\"/main/manageUsers/EditUser/\"+name);\n    }\n\n    let items = users.map((item,index) => {\n        return <div key = {index} class=\"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n            Name: {item.fullName}<br/>\n            User Name: {item.userName}<br/>\n            Session Time Out: {item.sessionTimeOut}<br/>\n            Created Date: {item.created_date}<br/>\n            Permissions: {item.permissions.join(\",\")}<br/><br/>\n            <input class = \"w3-sans-serif\" type = \"button\" value = \"Edit\" onClick = {()=> editClick(item.fullName)} />\n            <input class = \"w3-sans-serif\" type = \"button\" value = \"Delete\" />\n\n        </div>\n    })    \n    return(\n       <div class=\"w3-container\">\n       <h1>Users</h1>\n       {items}\n       </div>\n    ) \n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}