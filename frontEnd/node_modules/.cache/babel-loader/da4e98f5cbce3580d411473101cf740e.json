{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMovies.js\",\n    _s = $RefreshSig$();\n\nimport { UserContext } from './Contexts';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AllMovies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const context = useContext(UserContext);\n  useEffect(() => {\n    console.log(\"All Movies: \" + context);\n  }, []);\n  axios.get('http://localhost:4000/routingToFront/moviesToClient').then(x => {\n    setMovies(x.data);\n  }).catch(error => {\n    console.log(error);\n  });\n  let items = movies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n      children: item.Name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find Movie: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 58\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 63\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n};\n\n_s(AllMovies, \"K9wrbqLm8tjtkRgNm0rxbnDF5UI=\");\n\n_c = AllMovies;\nexport default AllMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMovies\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMovies.js"],"names":["UserContext","useContext","useEffect","useState","axios","AllMovies","movies","setMovies","context","console","log","get","then","x","data","catch","error","items","map","item","index","Name"],"mappings":";;;;;AAAA,SAAQA,WAAR,QAA0B,YAA1B;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAI,MACnB;AAAA;;AACI,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMK,OAAO,GAAGP,UAAU,CAACD,WAAD,CAA1B;AACAE,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeF,OAA3B;AAED,GAHM,EAGL,EAHK,CAAT;AAMEJ,EAAAA,KAAK,CAACO,GAAN,CAAU,qDAAV,EACCC,IADD,CACMC,CAAC,IAAE;AAAEN,IAAAA,SAAS,CAACM,CAAC,CAACC,IAAH,CAAV;AAAoB,GAD9B,EACgCC,KADhC,CACsCC,KAAK,IAAI;AAACP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AAAmB,GADnE;AAIA,MAAIC,KAAK,GAAGX,MAAM,CAACY,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KACvB;AACE,wBAAO;AAAkB,MAAA,SAAS,EAAC,2DAA5B;AAAA,gBACJD,IAAI,CAACE;AADD,OAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD,GALW,CAAZ;AAQF,sBACG;AAAA,4CACY;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,IAAI,EAAG;AAA5B;AAAA;AAAA;AAAA;AAAA,YADZ,oBACkD;AAAA;AAAA;AAAA;AAAA,YADlD,eACuD;AAAA;AAAA;AAAA;AAAA,YADvD,EAECH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CA5BD;;GAAMZ,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import {UserContext} from './Contexts'\nimport {useContext, useEffect, useState} from 'react'\nimport axios from 'axios'\n\nconst AllMovies  = () =>\n{\n    const [movies, setMovies] = useState([])\n    const context = useContext(UserContext)\n    useEffect(() => {\n        console.log(\"All Movies: \"+context)\n\n      },[]);\n\n\n      axios.get('http://localhost:4000/routingToFront/moviesToClient')\n      .then(x=>{(setMovies(x.data))}).catch(error => {console.log(error)})\n      \n\n      let items = movies.map((item,index)=>\n      {\n        return <div key= {index} className=\"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n          {item.Name} \n        </div> \n      })\n\n      \n    return(\n       <div >\n       Find Movie: <input type = \"text\" name = \"find\" /> <br/><br/>\n       {items}\n       </div>\n    ) \n}\n\nexport default AllMovies\n"]},"metadata":{},"sourceType":"module"}