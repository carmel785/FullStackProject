{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMembers.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { UserContext } from './Contexts';\nimport { useContext, useEffect, useState } from 'react';\nimport SubscribeMovie from \"./SubscribeMovie\";\n\nconst AllMembers = () => {\n  _s();\n\n  const [members, setMembers] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subClicked, setSubClicked] = useState([]);\n  const context = useContext(UserContext);\n  useEffect(() => {\n    console.log(\"All Members: \" + context); //getting the members from the Web Service\n\n    axios.get('http://localhost:4000/routingToFront/membersToClient').then(x => {\n      setMembers(x.data);\n    }); //getting the subscriptions from the Web Service(DB)\n\n    axios.get('http://localhost:4000/routingToFront/subscriptionToClient').then(x => {\n      setSubscriptions(x.data);\n    }); //create array of falses the represent the members who clicked on Subscribe for new movie\n\n    let arr = [];\n    members.map(x => {\n      arr.push(false);\n    });\n    setSubClicked(arr);\n  }, []); //adding the index value to the array of members who open the subscribe button\n\n  const Aaa = index => {\n    // console.log(index)\n    let arr = subClicked;\n    arr.push(index);\n    setSubClicked(arr);\n    console.log(subClicked); // console.log(subClicked)\n  };\n\n  const openSubscribe = (index, item) => {\n    //  var arr = subClicked\n    //  console.log(subClicked[index])\n    //  if(arr[index] == false)\n    if (subClicked[index] == false) {\n      subClicked[index] = true;\n      setSubClicked(subClicked);\n    } else {\n      subClicked[index] = false;\n      setSubClicked(subClicked);\n    }\n\n    console.log(subClicked);\n  }; //  const subscribeVisible = (index) =>\n  //  {\n  //     let arr = subClicked\n  //     // console.log(arr)\n  //     // return arr[index]\n  //     return arr[index]\n  //  }\n\n\n  const subscriptionItems = (index, item) => {\n    return subscriptions.map((item2, index2) => {\n      //  <ul key = {index}>\n      if (item._id === item2.MemberId) {\n        console.log(item2.Movies);\n        item2.movies.map((m, index3) => {\n          console.log(m[index3]);\n        }); //   return <div key = {index2}>\n        //   <li>{item2.Movies}</li>\n        //  </div>\n      } // </ul>\n\n    });\n  };\n\n  let items = members.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), \"Email: \", item.Email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }, this), \"City: \", item.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-green w3-hover-shadow w3-padding-32 w3-bordered w3-code\",\n        style: {\n          border: \"3px solid\"\n        },\n        children: [\"Movies watched \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Subscribe to new movie\",\n          onClick: () => openSubscribe(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(SubscribeMovie, {\n          index: index,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: subscriptionItems(index, item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 8\n  }, this); // const addItem = () =>{\n  //   setItem([...item,{id: item.length}])\n  // }\n  // return(\n  //   <div>\n  //     <button onClick = {addItem}>Add number</button>\n  //     <ul>\n  //       {item.map(item => (\n  //         <li key = {item.id} >{item.id}</li>\n  //       ))}\n  //     </ul>\n  //   </div>\n  // )\n};\n\n_s(AllMembers, \"0wkahDX54b9Zjv8wIBeh4wFlOf0=\");\n\n_c = AllMembers;\nexport default AllMembers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMembers\");","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/FullStackProject/frontEnd/src/Components/AllMembers.js"],"names":["axios","UserContext","useContext","useEffect","useState","SubscribeMovie","AllMembers","members","setMembers","subscriptions","setSubscriptions","subClicked","setSubClicked","context","console","log","get","then","x","data","arr","map","push","Aaa","index","openSubscribe","item","subscriptionItems","item2","index2","_id","MemberId","Movies","movies","m","index3","items","Name","Email","City","border"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {UserContext} from './Contexts'\nimport {useContext, useEffect, useState} from 'react'\nimport SubscribeMovie from \"./SubscribeMovie\"\nconst AllMembers  = () =>\n{\n\n    const [members,setMembers] = useState([])\n    const [subscriptions,setSubscriptions] = useState([])\n    const [subClicked, setSubClicked] = useState([])\n\n\n    const context = useContext(UserContext)\n   \n    useEffect(() => {\n        console.log(\"All Members: \"+context)\n\n        //getting the members from the Web Service\n        axios.get('http://localhost:4000/routingToFront/membersToClient')\n          .then(x=>{setMembers(x.data)})\n        //getting the subscriptions from the Web Service(DB)\n        axios.get('http://localhost:4000/routingToFront/subscriptionToClient')\n          .then(x=>{setSubscriptions(x.data)})\n\n        //create array of falses the represent the members who clicked on Subscribe for new movie\n        let arr = []\n        members.map(x=> {\n          arr.push(false)\n        })\n        setSubClicked(arr)\n        \n      },[]);\n     \n      //adding the index value to the array of members who open the subscribe button\n      const Aaa = (index) =>\n      {\n          // console.log(index)\n          let arr = subClicked\n          arr.push(index)\n          setSubClicked(arr)\n          console.log(subClicked)\n          // console.log(subClicked)\n      }\n\n       const openSubscribe = (index, item) =>\n       {\n        //  var arr = subClicked\n        //  console.log(subClicked[index])\n        //  if(arr[index] == false)\n        if(subClicked[index] == false)\n         {\n          subClicked[index] = true\n           setSubClicked(subClicked)\n         }\n         else\n         {\n          subClicked[index] = false\n          setSubClicked(subClicked)\n         }\n         console.log(subClicked)\n       }\n\n      //  const subscribeVisible = (index) =>\n      //  {\n      //     let arr = subClicked\n      //     // console.log(arr)\n      //     // return arr[index]\n      //     return arr[index]\n      //  }\n\n       const subscriptionItems = (index,item) =>\n       {\n         return subscriptions.map((item2,index2)=>{\n          //  <ul key = {index}>\n\n          if(item._id === item2.MemberId)\n          {\n            console.log(item2.Movies)\n\n            item2.movies.map((m,index3)=>\n            {\n              console.log(m[index3])\n            })\n          //   return <div key = {index2}>\n          //   <li>{item2.Movies}</li>\n          //  </div>\n          }\n          // </ul>\n         })\n       }\n       \n\n\n      let items = members.map((item,index)=>\n      {\n        return <div key = {index} className=\"w3-blue w3-hover-shadow w3-padding-32 w3-bordered w3-code\">\n         <h4>{item.Name}</h4>\n         Email: {item.Email}<br/>\n         City: {item.City} <br/>\n       \n         <input type =\"button\" value = \"Edit\" />\n         <input type =\"button\" value = \"Delete\"/>\n         <div className=\"w3-green w3-hover-shadow w3-padding-32 w3-bordered w3-code\" style= {{border: \"3px solid\"}}>\n         Movies watched <br/>\n         <input type =\"button\" value = \"Subscribe to new movie\" onClick = {() => openSubscribe(index)} />\n        <SubscribeMovie index = {index} item = {item} />\n        <ul>\n        {subscriptionItems(index,item)}\n        </ul>\n         </div>\n        </div>\n      })\n\n\n    return(\n       <div>\n       {items}\n       </div>\n    ) \n\n      \n\n      // const addItem = () =>{\n      //   setItem([...item,{id: item.length}])\n      // }\n\n    // return(\n    //   <div>\n    //     <button onClick = {addItem}>Add number</button>\n    //     <ul>\n    //       {item.map(item => (\n    //         <li key = {item.id} >{item.id}</li>\n    //       ))}\n    //     </ul>\n    //   </div>\n    // )\n}\n\nexport default AllMembers\n"]},"metadata":{},"sourceType":"module"}